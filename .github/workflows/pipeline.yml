name: Exoscale

on:
  pull_request:
    branches:
      - cluster
jobs:
  unit-tests:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-go@v2
    - run: make test

  build-image:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: whoan/docker-build-with-cache-action@v3
      with:
        username: "${{ secrets.DOCKERHUB_USERNAME }}"
        password: "${{ secrets.DOCKERHUB_PASSWORD }}"
        image_name: elastisys/ckctl
        image_tag: ${{ github.sha }}

  e2e:
    needs: build-image
    runs-on: ubuntu-latest
    container:
      image: elastisys/ckctl:${{ github.sha }}
    env:
      CK8S_CONFIG_PATH: /ck8s-config
      CK8S_AUTO_APPROVE: true
      CK8S_LOG_LEVEL: debug
      TFE_TOKEN: ${{ secrets.TF_TOKEN }}
    steps:
    - uses: actions/checkout@v2
    - run: ./pipeline/setup-pgp.bash
      env:
        PGP_KEY: ${{ secrets.PGP_KEY }}
        PGP_PASSPHRASE: ${{ secrets.PGP_PASSPHRASE }}
    # TODO: This could perhaps be replaced with the terraform-credentials-env.
    #       https://github.com/apparentlymart/terraform-credentials-env
    - run: ./pipeline/setup-terraform.bash
      env:
        TF_TOKEN: ${{ secrets.TF_TOKEN }}
    - run: ckctl init cluster-pipeline-${{ github.run_id }} exoscale
      env:
        CK8S_PGP_FP: 3EEFED60C2E86263117AC3F7792CF1BD81B69515
    - run: ./pipeline/configure.bash
      env:
        CI_EXOSCALE_KEY: ${{ secrets.EXOSCALE_KEY }}
        CI_EXOSCALE_SECRET: ${{ secrets.EXOSCALE_SECRET }}
    - run: ckctl apply --cluster sc
    - run: ckctl apply --cluster wc
    - run: ckctl status --cluster sc
    - run: ckctl status --cluster wc
    - run: ./pipeline/e2e-tests.bash
    - if: always()
      run: ckctl destroy --cluster wc
    - if: always()
      run: ckctl destroy --cluster sc
      # We don't run --destroy-remote-workspace if: always() to reduce the risk
      # of leaving cloud resources unmanaged.
    - run: ckctl destroy --cluster sc --destroy-remote-workspace

  clean-image:
    needs: e2e
    if: always()
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - run: ./pipeline/cleanup-docker-image.bash
      env:
        DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
        DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
