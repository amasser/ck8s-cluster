name: Safespring-pipeline

on: [push]

jobs:
  infra:
    runs-on: ubuntu-latest
    container: 
      image: elastisys/ck8s-bitbucket-pipeline:1.0.9
    steps:
    - uses: actions/checkout@v1
    - run: echo $GITHUB_RUN_ID
      shell: bash
    - run: env
      shell: bash
    - run: ./pipeline/infra.sh
      shell: bash
      env:
        CLOUD_PROVIDER: safespring
        TF_TOKEN: ${{ secrets.TF_TOKEN }}
        SSH_KEY_SC: ${{ secrets.SSH_KEY_SC }}
        SSH_KEY_WC: ${{ secrets.SSH_KEY_WC }}
        OS_USERNAME: ${{ secrets.SAFESPRING_OS_USERNAME }}
        OS_PASSWORD: ${{ secrets.SAFESPRING_OS_PASSWORD }}
        VAULT_APPROLE_RID: ${{ secrets.VAULT_APPROLE_RID }}
        VAULT_APPROLE_SID: ${{ secrets.VAULT_APPROLE_SID }}
        S3_ACCESS_KEY: ${{ secrets.SAFESPRING_S3_ACCESS_KEY }}
        S3_SECRET_KEY: ${{ secrets.SAFESPRING_S3_SECRET_KEY }}
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    - name: Upload infra.json
      if: always()
      uses: actions/upload-artifact@v1
      with:
        name: infra.json
        path: infra.json
    - name: upload terraform output
      if: always()
      uses: actions/upload-artifact@v1
      with:
        name: tfoutput        
        path: tfoutput

  rke-sc:
    needs: infra
    runs-on: ubuntu-latest
    container: 
      image: elastisys/ck8s-bitbucket-pipeline:1.0.9
    steps:
    - uses: actions/checkout@v1
    - name: Download infra.json
      uses: actions/download-artifact@v1
      with:
        name: infra.json
        path: .
    - run: ./pipeline/rke-sc.sh
      shell: bash
      env:
        CLOUD_PROVIDER: safespring
        SSH_KEY_SC: ${{ secrets.SSH_KEY_SC }}
        SSH_KEY_WC: ${{ secrets.SSH_KEY_WC }}
        OS_USERNAME: ${{ secrets.SAFESPRING_OS_USERNAME }}
        OS_PASSWORD: ${{ secrets.SAFESPRING_OS_PASSWORD }}
        VAULT_APPROLE_RID: ${{ secrets.VAULT_APPROLE_RID }}
        VAULT_APPROLE_SID: ${{ secrets.VAULT_APPROLE_SID }}
    - name: Upload kube_config
      uses: actions/upload-artifact@v1
      with:
        name: kube_config_eck-sc.yaml
        path: kube_config_eck-sc.yaml
    - name: Upload rke output
      if: always()
      uses: actions/upload-artifact@v1
      with:
        name: rke-sc-output
        path: rke-sc-output

  rke-wc:
    needs: infra
    runs-on: ubuntu-latest
    container: 
      image: elastisys/ck8s-bitbucket-pipeline:1.0.9
    steps:
    - uses: actions/checkout@v1
    - name: Download infra.json
      uses: actions/download-artifact@v1
      with:
        name: infra.json
        path: .
    - run: ./pipeline/rke-wc.sh
      shell: bash
      env:
        CLOUD_PROVIDER: safespring
        SSH_KEY_SC: ${{ secrets.SSH_KEY_SC }}
        SSH_KEY_WC: ${{ secrets.SSH_KEY_WC }}
        OS_USERNAME: ${{ secrets.SAFESPRING_OS_USERNAME }}
        OS_PASSWORD: ${{ secrets.SAFESPRING_OS_PASSWORD }}
        VAULT_APPROLE_RID: ${{ secrets.VAULT_APPROLE_RID }}
        VAULT_APPROLE_SID: ${{ secrets.VAULT_APPROLE_SID }}
    - name: Upload kube_config
      uses: actions/upload-artifact@v1
      with:
        name: kube_config_eck-wc.yaml
        path: kube_config_eck-wc.yaml
    - name: Upload rke output
      if: always()
      uses: actions/upload-artifact@v1
      with:
        name: rke-wc-output
        path: rke-wc-output

  deploy-sc:
    needs: [rke-sc,rke-wc]
    runs-on: ubuntu-latest
    container: 
      image: elastisys/ck8s-bitbucket-pipeline:1.0.9
    steps:
    - uses: actions/checkout@v1
    - name: Download infra.json
      uses: actions/download-artifact@v1
      with:
        name: infra.json
        path: .
    - name: Download kube_config
      uses: actions/download-artifact@v1
      with:
        name: kube_config_eck-sc.yaml
        path: .
    - run: ./pipeline/deploy-sc.sh
      shell: bash
      env:
        CLOUD_PROVIDER: safespring
        VAULT_APPROLE_RID: ${{ secrets.VAULT_APPROLE_RID }}
        VAULT_APPROLE_SID: ${{ secrets.VAULT_APPROLE_SID }}
        S3_ACCESS_KEY: ${{ secrets.SAFESPRING_S3_ACCESS_KEY }}
        S3_SECRET_KEY: ${{ secrets.SAFESPRING_S3_SECRET_KEY }}
    - name: Upload deploy output
      uses: actions/upload-artifact@v1
      with:
        name: deploy-sc-output
        path: deploy-sc-output

  deploy-wc:
    needs: [rke-sc,rke-wc]
    runs-on: ubuntu-latest
    container: 
      image: elastisys/ck8s-bitbucket-pipeline:1.0.9
    steps:
    - uses: actions/checkout@v1
    - name: Download infra.json
      uses: actions/download-artifact@v1
      with:
        name: infra.json
        path: .
    - name: Download kube_config
      uses: actions/download-artifact@v1
      with:
        name: kube_config_eck-wc.yaml
        path: .
    - run: ./pipeline/deploy-wc.sh
      shell: bash
      env:
        CLOUD_PROVIDER: safespring
        VAULT_APPROLE_RID: ${{ secrets.VAULT_APPROLE_RID }}
        VAULT_APPROLE_SID: ${{ secrets.VAULT_APPROLE_SID }}
        S3_ACCESS_KEY: ${{ secrets.SAFESPRING_S3_ACCESS_KEY }}
        S3_SECRET_KEY: ${{ secrets.SAFESPRING_S3_SECRET_KEY }}
    - name: Upload deploy output
      uses: actions/upload-artifact@v1
      with:
        name: deploy-wc-output
        path: deploy-wc-output
  
  test-sc:
    needs: [deploy-wc, deploy-sc]
    runs-on: ubuntu-latest
    container: 
      image: elastisys/ck8s-bitbucket-pipeline:1.0.9
    steps:
    - uses: actions/checkout@v1
    - name: Download infra.json
      uses: actions/download-artifact@v1
      with:
        name: infra.json
        path: .
    - name: Download kube_config
      uses: actions/download-artifact@v1
      with:
        name: kube_config_eck-sc.yaml
        path: .
    - run: ./pipeline/test-sc-safespring.sh
      shell: bash
      env:
        EXOSCALE_API_KEY: ${{ secrets.EXOSCALE_API_KEY }}
        EXOSCALE_SECRET_KEY: ${{ secrets.EXOSCALE_SECRET_KEY }}
        VAULT_APPROLE_RID: ${{ secrets.VAULT_APPROLE_RID }}
        VAULT_APPROLE_SID: ${{ secrets.VAULT_APPROLE_SID }}

  test-wc:
    needs: [deploy-wc, deploy-sc]
    runs-on: ubuntu-latest
    container: 
      image: elastisys/ck8s-bitbucket-pipeline:1.0.9
    steps:
    - uses: actions/checkout@v1
    - name: Download infra.json
      uses: actions/download-artifact@v1
      with:
        name: infra.json
        path: .
    - name: Download kube_config
      uses: actions/download-artifact@v1
      with:
        name: kube_config_eck-wc.yaml
        path: .
    - run: ./pipeline/test-wc-safespring.sh
      shell: bash
      env:
        EXOSCALE_API_KEY: ${{ secrets.EXOSCALE_API_KEY }}
        EXOSCALE_SECRET_KEY: ${{ secrets.EXOSCALE_SECRET_KEY }}
        VAULT_APPROLE_RID: ${{ secrets.VAULT_APPROLE_RID }}
        VAULT_APPROLE_SID: ${{ secrets.VAULT_APPROLE_SID }}

  clean-up:
    needs: [test-sc,test-wc]
    if: always()
    runs-on: ubuntu-latest
    container: 
      image: elastisys/ck8s-bitbucket-pipeline:1.0.9
    steps:
    - uses: actions/checkout@v1
    - name: Download kube_config
      uses: actions/download-artifact@v1
      with:
        name: kube_config_eck-sc.yaml
        path: .
    - run: ./pipeline/cleanup-safespring-volumes.sh
      shell: bash
      env: 
        VAULT_APPROLE_RID: ${{ secrets.VAULT_APPROLE_RID }}
        VAULT_APPROLE_SID: ${{ secrets.VAULT_APPROLE_SID }}
    - run: ./pipeline/cleanup-safespring.sh
      if: always()
      shell: bash
      env: 
        TF_TOKEN: ${{ secrets.TF_TOKEN }}
        SSH_KEY_SC: ${{ secrets.SSH_KEY_SC }}
        SSH_KEY_WC: ${{ secrets.SSH_KEY_WC }}
        OS_USERNAME: ${{ secrets.SAFESPRING_OS_USERNAME }}
        OS_PASSWORD: ${{ secrets.SAFESPRING_OS_PASSWORD }}
        VAULT_APPROLE_RID: ${{ secrets.VAULT_APPROLE_RID }}
        VAULT_APPROLE_SID: ${{ secrets.VAULT_APPROLE_SID }}
        S3_ACCESS_KEY: ${{ secrets.SAFESPRING_S3_ACCESS_KEY }}
        S3_SECRET_KEY: ${{ secrets.SAFESPRING_S3_SECRET_KEY }}
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}