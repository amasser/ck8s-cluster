image: vanneback/exoscale-pipeline:ubuntu
pipelines:
  #pull-requests:
  #  '**':
  default:
    - step:
        name: Infrastructure
        script:
          # Variables
          - source /init.sh
            #- export TF_VAR_dns_prefix=pipeline-$BITBUCKET_BUILD_NUMBER
          # Infrastructure
          - cd terraform/
          - echo '1' | TF_WORKSPACE=pipeline terraform init
          - terraform workspace new pipeline-$BITBUCKET_BUILD_NUMBER
          - terraform init
          - terraform plan -var 'public_ingress_cidr_whitelist=["0.0.0.0/0"]' -out=tfplan -input=false
          - terraform apply -input=false tfplan

    - parallel:
        - step:
            name: system service stack
            script:
              # Variables
              - source /init.sh
                #- export TF_VAR_dns_prefix=pipeline-$BITBUCKET_BUILD_NUMBER
              # Infrastructure
              - cd terraform/
              - echo '1' | TF_WORKSPACE=pipeline terraform init
              - terraform workspace select pipeline-$BITBUCKET_BUILD_NUMBER
              # RKE
              - sleep 40
              - cd ..
              - ./scripts/gen-rke-conf-ss.sh > ./eck-ss.yaml
              - rke up --config ./eck-ss.yaml
              # Services
              - sleep 5
              - export KUBECONFIG=$(pwd)/kube_config_eck-ss.yaml
              - kubectl get pods --all-namespaces
                #- ./scripts/deploy-ss.sh
              - sleep 5
              - kubectl get pods --all-namespaces
              - kubectl get nodes

            #after-script:
            #  - source /init.sh
            #  - cd terraform/system-services
            #  - echo '1' | TF_WORKSPACE=pipeline terraform init
            #  - terraform workspace select pipeline
            #  - terraform destroy -auto-approve
        - step:
            name: customer stack
            script:
              # Variables
              - source /init.sh
                # - export TF_VAR_dns_prefix=pipeline-$BITBUCKET_BUILD_NUMBER
              # Infrastructure
              - cd terraform/
              - echo '1' | TF_WORKSPACE=pipeline terraform init
              - terraform workspace select pipeline-$BITBUCKET_BUILD_NUMBER
              # RKE
              - sleep 40
              - cd ../..
              - ./scripts/gen-rke-conf-c.sh > ./eck-c.yaml
              - rke up --config ./eck-c.yaml
              # Services
              - sleep 5
              - export KUBECONFIG=$(pwd)/kube_config_eck-c.yaml
              - export ECK_SS_KUBECONFIG=$(pwd)/kube_config_eck-ss.yaml
              - kubectl get pods --all-namespaces
                #- ./scripts/deploy-c.sh
              - sleep 5
              - kubectl get pods --all-namespaces
              - kubectl get nodes

            #after-script:
            #  - source /init.sh
            #  - cd terraform/customer
            #  - echo '1' | TF_WORKSPACE=pipeline terraform init
            #  - terraform workspace select pipeline
            #  - terraform destroy -auto-approve
