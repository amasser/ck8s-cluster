imageTag: "v2.21.0"

#crds are installed in the k8s apply step
crd:
  present: true

resources:
  limits:
    cpu: 100m
    memory: 50Mi
  requests:
    cpu: 100m
    memory: 50Mi

ingress:
  enabled: true
  annotations:
    cert-manager.io/issuer: letsencrypt-{{ requiredEnv "CERT_TYPE" }}
    {{ if (env "DEX_WHITELIST_SOURCE_RANGE") }}
    nginx.ingress.kubernetes.io/whitelist-source-range: {{ env "DEX_WHITELIST_SOURCE_RANGE" }}
    {{ end }}
  tls:
  - secretName: dex-tls
    hosts:
    - dex.{{ requiredEnv "ECK_BASE_DOMAIN" }}
  hosts:
  - dex.{{ requiredEnv "ECK_BASE_DOMAIN" }}

# https termination by ingress instead of through dex
https: false

config:
  issuer: https://dex.{{ requiredEnv "ECK_BASE_DOMAIN" }}
  connectors:
  {{ if and (env "GOOGLE_CLIENT_ID") (env "GOOGLE_CLIENT_SECRET") }}
  - type: oidc
    id: google
    name: Google
    config:
      # Canonical URL of the provider, also used for configuration discovery.
      # This value MUST match the value returned in the provider config discovery.
      #
      # See: https://openid.net/specs/openid-connect-discovery-1_0.html#ProviderConfig
      issuer: https://accounts.google.com
      redirectURI: https://dex.{{ requiredEnv "ECK_BASE_DOMAIN" }}/callback
      clientID: {{ env "GOOGLE_CLIENT_ID" }}
      clientSecret: {{ env "GOOGLE_CLIENT_SECRET" }}
      hostedDomains:
{{ requiredEnv "OAUTH_ALLOWED_DOMAINS" | splitList " " | toYaml | indent 8 }}
  {{ end }}
  {{ if and (env "AAA_CLIENT_ID") (env "AAA_CLIENT_SECRET") }}
  - name: AAA
    id: aaa
    type: oidc
    config:
      clientID: {{ env "AAA_CLIENT_ID" }}
      clientSecret: {{ env "AAA_CLIENT_SECRET" }}
      issuer: https://asmp-test.a1.net/oauth2
      redirectURI: https://dex.{{ requiredEnv "ECK_BASE_DOMAIN" }}/callback
      insecureSkipEmailVerified: true
  {{ end }}
  staticClients:
    - id: kubelogin
      name: 'Kubernetes CLI'
      secret: {{ requiredEnv "KUBELOGIN_CLIENT_SECRET" }}
      redirectURIs:
      - http://localhost:8000
      - http://localhost:8080/oauth2/callback
      - https://ck8sdash.{{ requiredEnv "ECK_BASE_DOMAIN" }}/oauth2/callback
      - https://ck8sdash.{{ requiredEnv "ECK_OPS_DOMAIN" }}/oauth2/callback
    - id: grafana
      secret: {{ requiredEnv "GRAFANA_CLIENT_SECRET" }}
      name: 'Grafana'
      redirectURIs:
        - https://grafana.{{ requiredEnv "ECK_BASE_DOMAIN" }}/login/generic_oauth
{{ if eq (env "ENABLE_HARBOR") "true" }}
    - id: harbor
      secret: {{ requiredEnv "HARBOR_CLIENT_SECRET" }}
      name: 'Harbor'
      redirectURIs:
        - https://harbor.{{ requiredEnv "ECK_BASE_DOMAIN" }}/c/oidc/callback
{{ end }}

{{ if eq (env "ENABLE_STATIC_DEX_LOGIN") "true" }}
  enablePasswordDB: true
  staticPasswords:
    - email: "admin@example.com"
      # bcrypt hash of the string "password"
      hash: {{ env "DEX_STATIC_PWD" | default "$2a$10$2b2cU8CPhOTaGrs1HRQuAueS7JTT5ZHsHSzYiFPm1leZck7Mc8T4W" }}
      username: "admin"
      userID: "08a8684b-db88-4b73-90a9-3cd1661f5466"
{{ end }}
