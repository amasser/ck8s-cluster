elastisys_custom:
  # The following values must be set in order to use the chart.
  influx_addr: {{ requiredEnv "INFLUX_ADDR" }}
  s3_region: {{ requiredEnv "S3_REGION" }}
  s3_region_endpoint: {{ requiredEnv "S3_REGION_ENDPOINT" }}
  s3_influx_bucket_name: {{ requiredEnv "S3_INFLUX_BUCKET_NAME" }}
  s3_access_key: {{ requiredEnv "S3_ACCESS_KEY" }}
  s3_secret_key: {{ requiredEnv "S3_SECRET_KEY" }}
  influxdb_user: {{ requiredEnv "INFLUXDB_USER" }}
  influxdb_password: {{ requiredEnv "INFLUXDB_PWD" }}

serviceAccount:
  create: false

image:
  tag: "1.8.0-alpine"

persistence:
  size: 30Gi

setDefaultUser:
  # NOTE: the Job to create this user is actually disabled, this only creates
  # the secret that we set env vars from below.
  # In fact, it is not possible to create the user through the setDefaultUser
  # Job when http auth is enabled.
  enabled: false

env:
# Set credentials from Secret so that it is not possible to read them directly
# with `kubectl get pod -o yaml`
- name: INFLUXDB_ADMIN_USER
  valueFrom:
    secretKeyRef:
      name: influxdb-auth
      key: INFLUXDB_USER
- name: INFLUXDB_ADMIN_PASSWORD
  valueFrom:
    secretKeyRef:
      name: influxdb-auth
      key: INFLUXDB_PWD

config:
  data:
    index_version: tsi1
  http:
    auth_enabled: true
    log_enabled: false

resources:
  requests:
    memory: 4Gi
    cpu: 0.5
  limits:
    memory: 4Gi
    cpu: 2

# TODO: don't run when restoring the cluster
# TODO: make the duration configurable
initScripts:
  enabled: true
  scripts:
    init.iql: |+
      CREATE DATABASE "service_cluster" WITH DURATION 3d REPLICATION 1 NAME service_cluster_rp;
      CREATE DATABASE "workload_cluster" WITH DURATION 7d REPLICATION 1 NAME workload_cluster_rp;

extraContainers:
  - name: influxdb-node-exporter
    image: prom/node-exporter:v1.0.1
    args: ["--collector.textfile.directory=/textfile-collector", "--no-collector.arp", "--no-collector.bcache", "--no-collector.bonding", "--no-collector.conntrack", "--no-collector.cpu", "--no-collector.cpufreq", "--no-collector.diskstats", "--no-collector.edac", "--no-collector.entropy", "--no-collector.filefd", "--no-collector.filesystem", "--no-collector.hwmon", "--no-collector.infiniband", "--no-collector.ipvs", "--no-collector.loadavg", "--no-collector.mdadm", "--no-collector.meminfo", "--no-collector.netclass", "--no-collector.netdev", "--no-collector.nfs", "--no-collector.nfsd", "--no-collector.netstat", "--no-collector.pressure", "--no-collector.stat", "--no-collector.sockstat", "--no-collector.timex", "--no-collector.vmstat", "--no-collector.xfs", "--no-collector.zfs"]
      # enabled collectors: textfile, time, uname
    ports:
    - containerPort: 9100
      name: web
    volumeMounts:
      - name: textfile-collector-dir
        mountPath: /textfile-collector
  - name: influxdb-cronjob
    image: bambash/docker-cron
    volumeMounts:
      - name: influxdb-data #TODO: use influxdb.fullname from _helpers.tpl instead hardcoded "influxdb"
        mountPath: /var/lib/influxdb
      - name: textfile-collector-dir
        mountPath: /textfile-collector
      - name: scripts
        mountPath: /scripts
      - name: cronfiles
        mountPath: /etc/cron.d/
      - name: config-volume
        mountPath: /etc/config

volumes:
  - name: textfile-collector-dir
    emptyDir: {}
  - name: scripts
    configMap:
      name: influxdb-du-monitoring-script #TODO: use influxdb.fullname from _helpers.tpl instead hardcoded "influxdb"
  - name: cronfiles
    configMap:
      name: influxdb-du-monitoring-cronjob #TODO: use influxdb.fullname from _helpers.tpl instead hardcoded "influxdb"
  - name: config-volume
    configMap:
      name: influxdb-common-env-vars-cm #TODO: use influxdb.fullname from _helpers.tpl instead hardcoded "influxdb"
      items:
      - key: influxdb-retention-database
        path: influxdb-retention-database
      - key: prometheus-influxdb-retention-metric-name
        path: prometheus-influxdb-retention-metric-name