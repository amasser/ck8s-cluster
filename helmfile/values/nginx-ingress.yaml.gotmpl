## nginx configuration
## Ref: https://github.com/kubernetes/ingress/blob/master/controllers/nginx/configuration.md
##
controller:
  image:
    allowPrivilegeEscalation: true
    tag: "0.28.0"
    runAsUser: 101

  config:
    disable-ipv6-dns: "true"
    proxy-body-size: "200m"
    {{ if env "GLOBAL_WHITELIST_SOURCE_RANGE" }}
    whitelist-source-range: {{ env "GLOBAL_WHITELIST_SOURCE_RANGE" }}
    {{ end }}
    {{ if eq (env "CLOUD_PROVIDER") "safespring" }}
    use-proxy-protocol: "true"
    {{ end }}

  # Required for use with CNI based kubernetes installations (such as ones set up by kubeadm),
  # since CNI and hostport don't mix yet. Can be deprecated once https://github.com/kubernetes/kubernetes/issues/23920
  # is merged
  hostNetwork: true

  # Optionally change this to ClusterFirstWithHostNet in case you have 'hostNetwork: true'.
  # By default, while using host network, name resolution uses the host's DNS. If you wish nginx-controller
  # to keep resolving names inside the k8s network, use ClusterFirstWithHostNet.
  dnsPolicy: ClusterFirstWithHostNet

  ## Use host ports 80 and 443
  daemonset:
    {{ if eq (env "CLOUD_PROVIDER") "aws" }}
    useHostPort: false
    {{ else }}
    useHostPort: true
    {{ end }}

    hostPorts:
      http: 80
      https: 443

  tolerations:
  - key: "nodeType"
    operator: "Exists"
    effect: "NoSchedule"

  ## DaemonSet or Deployment
  ##
  kind: DaemonSet

  # The update strategy to apply to the Deployment or DaemonSet
  ##
  updateStrategy:
    type: RollingUpdate

  # minReadySeconds to avoid killing pods before we are ready
  ##
  minReadySeconds: 10

  ## terminationGracePeriodSeconds
  ##
  terminationGracePeriodSeconds: 60

  service:
    {{ if eq (env "EXTERNAL_TRAFFIC_POLICY_LOCAL") "true" }}
    ## Set external traffic policy to: "Local" to preserve source IP on
    ## providers supporting it
    ## Ref: https://kubernetes.io/docs/tutorials/services/source-ip/#source-ip-for-services-with-typeloadbalancer
    ## Required for IP whitelisting
    externalTrafficPolicy: "Local"
    {{ end }}
    {{ if eq (env "CLOUD_PROVIDER") "aws" }}
    enabled: true
    type: LoadBalancer
    annotations:
      service.beta.kubernetes.io/aws-load-balancer-type: nlb
    {{ else }}
    enabled: false
    {{ end }}

## Default 404 backend
##
defaultBackend:

  ## If false, controller.defaultBackendService must be provided
  ##
  enabled: true

  name: default-backend
  image:
    repository: k8s.gcr.io/defaultbackend-amd64
    tag: "1.5"
    pullPolicy: IfNotPresent
    # nobody user -> uid 65534
    runAsUser: 65534

  extraArgs: {}

  serviceAccount:
    create: true
    name:
  ## Additional environment variables to set for defaultBackend pods
  extraEnvs: []

  port: 8080

  ## Node tolerations for server scheduling to nodes with taints
  ## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
  ##
  tolerations:
  - key: "nodeType"
    operator: "Equal"
    value: "elastisys"
    effect: "NoSchedule"

# If true, create & use Pod Security Policy resources
# https://kubernetes.io/docs/concepts/policy/pod-security-policy/
podSecurityPolicy:
  enabled: {{ requiredEnv "ENABLE_PSP" }}

serviceAccount:
  create: true
  name:
