prometheusSpec:
  alerting:
    # Use the default alertmanager that comes with prometheus-operator
    alertmanagers:
    - name: prometheus-operator-alertmanager
      namespace: monitoring
      pathPrefix: /
      port: web
  resources:
    requests:
      memory: 1Gi
      cpu: 0.3
    limits:
      memory: 2Gi
      cpu: 1

  enableAdminAPI: false
  logFormat: logfmt
  logLevel: info
  remoteRead:
  - read_recent: true
    url: http://influxdb.influxdb-prometheus.svc.cluster.local:8086/api/v1/prom/read?db=workload_cluster&u=demo&p={{ requiredEnv "INFLUXDB_PWD"}}
  remoteWrite:
  - url: http://influxdb.influxdb-prometheus.svc.cluster.local:8086/api/v1/prom/write?db=workload_cluster&u=demo&p={{ requiredEnv "INFLUXDB_PWD"}}
  replicas: 1
  retention: 10d
  securityContext:
    fsGroup: 2000
    runAsNonRoot: true
    runAsUser: 1000
  serviceAccountName: prometheus-operator-prometheus
  serviceMonitorSelector:
    matchLabels:
      target: none  # so that operator wont generate new config
  ruleNamespaceSelector: {}
  ruleSelector:
    matchLabels:
      app: prometheus-operator
      release: prometheus-operator
  externalLabels:
    cluster: workload_cluster

scrapeConfig:
#The idea with splitting the federation in two is to (hopefully) reduce the resources needed for prometheus.
#If I have understood it correctly prometheus will use more resources (primarily memory) if you have larger scrapes.
#So if we scrape everything from another prometheus it will be a large job where prometheus might run out of memory.
#But splitting them might reduce the memory needed.
#The kubelet is roughly half of the metrics, so these two scrapes will be roughly the same size.
- job_name: 'federate-kubelet'
  scrape_interval: 30s

  honor_labels: true
  metrics_path: '/federate'

  scheme: https

  params:
    'match[]':
      - '{job="kubelet"}'

  tls_config:
    insecure_skip_verify: {{ requiredEnv "TLS_SKIP_VERIFY"}}

  static_configs:
    - labels:
        cluster: workload_cluster
      targets:
      - prometheus.{{ requiredEnv "ECK_BASE_DOMAIN"}}

- job_name: 'federate-others'
  scrape_interval: 30s

  honor_labels: true
  metrics_path: '/federate'

  scheme: https

  params:
    'match[]':
      - '{job="kube-state-metrics"}'
      - '{job="node-exporter"}'
      - '{job="coredns"}'
      - '{job="apiserver"}'
      - '{job="prometheus-operator-prometheus"}'
      - '{job="prometheus-operator-operator"}'
      - '{__name__=~"job:.*"}'
      - '{__name__=~"namespace(_|:).*"}'
  basic_auth:
    username: prometheus
    password: {{ requiredEnv "PROMETHEUS_CLIENT_SECRET"}}

  tls_config:
    insecure_skip_verify: {{ requiredEnv "TLS_SKIP_VERIFY"}}

  static_configs:
    - labels:
        cluster: workload_cluster
      targets:
      - prometheus.{{ requiredEnv "ECK_BASE_DOMAIN"}}
