elasticsearch:
  scheme: https
  port: 443
  auth:
    enabled: true
    user: elastic
    password: ""
  host: elastic.{{ requiredEnv "ECK_OPS_DOMAIN" }}
  sslVerify: {{ requiredEnv "TLS_VERIFY" }}
  logLevel: "debug"

# Default args include "-q" which sets loglevel to warning.
fluentdArgs: "--no-supervisor"
configMaps:
  useDefaults:
    systemConf: false
    containersInputConf: false
    outputConf: false
secret:
- name: OUTPUT_PASSWORD
  secret_name: elasticsearch
  secret_key: password

additionalPlugins:
  #New version bugfixes for ilm
  #default: gem 'fluent-plugin-elasticsearch', '~>3.5.3'
- name: fluent-plugin-elasticsearch
  version: 3.6.0
  #New version due to https://github.com/fluent/fluent-plugin-prometheus/issues/119
  #default: gem 'fluent-plugin-prometheus', '~>1.4.0'
- name: fluent-plugin-prometheus
  version: 1.6.1 
  #Required for ilm features
- name: elasticsearch-xpack
  version: 7.4
  
extraConfigMaps:
  system.conf: |-
    <system>
      root_dir /tmp/fluentd-buffers/
      <log>
        format json
      </log>
    </system>
  10-kube-components.conf: |-
    <source>
      @id kube-components
      @type tail
      path /var/lib/rancher/rke/log/*.log
      pos_file /var/log/fluentd-kube-components.pos
      tag kubecomponents.*
      read_from_head true
      <parse>
        @type multi_format
        <pattern>
          format json
          time_key time
          time_format %Y-%m-%dT%H:%M:%S.%NZ
        </pattern>
      </parse>
    </source>
    <filter kubecomponents.**>
      @type record_transformer
      enable_ruby true
      <record>
        component ${tag_suffix[6].split("_")[0]}
        container_id ${tag_suffix[6].split("_")[1]}
      </record>
    </filter>
  20-kube-audit.conf: |-
    <source>
      @id kube-audit
      @type tail
      path /var/log/kube-audit/kube-apiserver.log
      pos_file /var/log/kube-audit/fluentd-kube-apiserver.pos
      tag kubeaudit.*
      read_from_head true
      <parse>
        @type multi_format
        <pattern>
          format json
          time_key time
          time_format %Y-%m-%dT%H:%M:%S.%NZ
        </pattern>
      </parse>
    </source>
    # Remove keys that include raw data causing errors
    # See: https://github.com/uken/fluent-plugin-elasticsearch/issues/452
    <filter kubeaudit.**>
      @id kube_api_audit_normalize
      @type record_transformer
      remove_keys responseObject,requestObject
    </filter>

  containers.input.conf: |-
    #This config is taken from a default config that we have disabled
    #See the value "configMaps.useDefaults.containersInputConf: false" above
    #But we added "reserve_time true" in order to allow falco logs to use json
    <source>
      @id fluentd-containers.log
      @type tail
      path /var/log/containers/*.log
      pos_file /var/log/containers.log.pos
      tag raw.kubernetes.*
      read_from_head true
      <parse>
        @type multi_format
        <pattern>
          format json
          time_key time
          time_format %Y-%m-%dT%H:%M:%S.%NZ
        </pattern>
        <pattern>
          format /^(?<time>.+) (?<stream>stdout|stderr) [^ ]* (?<log>.*)$/
          time_format %Y-%m-%dT%H:%M:%S.%N%:z
        </pattern>
      </parse>
    </source>

    # Detect exceptions in the log output and forward them as one log entry.
    <match raw.kubernetes.**>
      @id raw.kubernetes
      @type detect_exceptions
      remove_tag_prefix raw
      message log
      stream stream
      multiline_flush_interval 5
      max_bytes 500000
      max_lines 1000
    </match>

    # Concatenate multi-line logs
    <filter **>
      @id filter_concat
      @type concat
      key message
      multiline_end_regexp /\n$/
      separator ""
    </filter>

    # Enriches records with Kubernetes metadata
    <filter kubernetes.**>
      @id filter_kubernetes_metadata
      @type kubernetes_metadata
    </filter>

    # Fixes json fields in Elasticsearch
    <filter kubernetes.**>
      @id filter_parser
      @type parser
      key_name log
      reserve_data true
      reserve_time true #This is the line that is changed from the default config
      remove_key_name_field true
      <parse>
        @type multi_format
        <pattern>
          format json
        </pattern>
        <pattern>
          format none
        </pattern>
      </parse>
    </filter>

  output.conf: |-
    <match kubecomponents.**>
        @id elasticsearch_kubecomponents
        @type elasticsearch
        @log_level "#{ENV['OUTPUT_LOG_LEVEL']}"
        include_tag_key true
        type_name _doc
        host "#{ENV['OUTPUT_HOST']}"
        port "#{ENV['OUTPUT_PORT']}"
        path "#{ENV['OUTPUT_PATH']}"
        scheme "#{ENV['OUTPUT_SCHEME']}"
        ssl_verify "#{ENV['OUTPUT_SSL_VERIFY']}"
        ssl_version "#{ENV['OUTPUT_SSL_VERSION']}"
        user "#{ENV['OUTPUT_USER']}"
        password "#{ENV['OUTPUT_PASSWORD']}"
        reconnect_on_error true
        # Custom parameters --START--
        # Rollover index configuration
        include_timestamp true # defaults to false
        index_name kubecomponents
        rollover_index true
        deflector_alias kubecomponents
        index_prefix kubecomponents
        index_date_pattern "now/d"
        # Ilm configuration
        enable_ilm true
        # Policy is already created by init container so fluentd will skip it's creation
        ilm_policy_id kubecomponents_policy
        ilm_policy {"policy": {"phases": {"hot": {"actions": {"rollover": {"max_size": "{{ requiredEnv "ROLLOVER_SIZE" }}GB","max_age": "{{ requiredEnv "ROLLOVER_AGE" }}d"}}}}}}
        # Template name is not used if ilm is in effect but it's mandatory parameter
        template_name kubecomponents_template
        template_file /etc/templates/kubecomponents_template
        customize_template {"<<index_prefix>>": "kubecomponents"}
        # Custom parameters --END--
        <buffer>
          @type file
          path /var/log/fluentd-buffers/kubernetes.kubecomponents.system.buffer
          flush_mode interval
          retry_type exponential_backoff
          flush_thread_count 2
          flush_interval 5s
          retry_forever
          retry_max_interval 30
          chunk_limit_size "#{ENV['OUTPUT_BUFFER_CHUNK_LIMIT']}"
          queue_limit_length "#{ENV['OUTPUT_BUFFER_QUEUE_LIMIT']}"
          overflow_action block
        </buffer>
      </match>
    <match kubeaudit.**>
        @id elasticsearch_kubeaudit
        @type elasticsearch
        @log_level "#{ENV['OUTPUT_LOG_LEVEL']}"
        include_tag_key true
        type_name _doc
        host "#{ENV['OUTPUT_HOST']}"
        port "#{ENV['OUTPUT_PORT']}"
        path "#{ENV['OUTPUT_PATH']}"
        scheme "#{ENV['OUTPUT_SCHEME']}"
        ssl_verify "#{ENV['OUTPUT_SSL_VERIFY']}"
        ssl_version "#{ENV['OUTPUT_SSL_VERSION']}"
        user "#{ENV['OUTPUT_USER']}"
        password "#{ENV['OUTPUT_PASSWORD']}"
        reconnect_on_error true
        # Custom parameters --START--
        # Rollover index configuration
        include_timestamp true # defaults to false
        index_name kubeaudit
        rollover_index true
        deflector_alias kubeaudit
        index_prefix kubeaudit
        index_date_pattern "now/d"
        # Ilm configuration
        enable_ilm true
        # Policy is already created by init container so fluentd will skip it's creation
        ilm_policy_id kubeaudit_policy
        ilm_policy {"policy": {"phases": {"hot": {"actions": {"rollover": {"max_size": "{{ requiredEnv "ROLLOVER_SIZE" }}GB","max_age": "{{ requiredEnv "ROLLOVER_AGE" }}d"}}}}}}
        # Template name is not used if ilm is in effect but it's mandatory parameter
        template_name kubeaudit_template
        template_file /etc/templates/kubeaudit_template
        customize_template {"<<index_prefix>>": "kubeaudit"}
        # Custom parameters --END--
        <buffer>
          @type file
          path /var/log/fluentd-buffers/kubernetes.kubeaudit.system.buffer
          flush_mode interval
          retry_type exponential_backoff
          flush_thread_count 2
          flush_interval 5s
          retry_forever
          retry_max_interval 30
          chunk_limit_size "#{ENV['OUTPUT_BUFFER_CHUNK_LIMIT']}"
          queue_limit_length "#{ENV['OUTPUT_BUFFER_QUEUE_LIMIT']}"
          overflow_action block
        </buffer>
      </match>
    <match kubernetes.**>
        @id elasticsearch_kubernetes
        @type elasticsearch
        @log_level "#{ENV['OUTPUT_LOG_LEVEL']}"
        include_tag_key true
        type_name _doc
        host "#{ENV['OUTPUT_HOST']}"
        port "#{ENV['OUTPUT_PORT']}"
        path "#{ENV['OUTPUT_PATH']}"
        scheme "#{ENV['OUTPUT_SCHEME']}"
        ssl_verify "#{ENV['OUTPUT_SSL_VERIFY']}"
        ssl_version "#{ENV['OUTPUT_SSL_VERSION']}"
        user "#{ENV['OUTPUT_USER']}"
        password "#{ENV['OUTPUT_PASSWORD']}"
        reconnect_on_error true
        # Custom parameters --START--
        # Rollover index configuration
        include_timestamp true # defaults to false
        index_name kubernetes
        rollover_index true
        deflector_alias kubernetes
        index_prefix kubernetes
        index_date_pattern "now/d"
        # Ilm configuration
        enable_ilm true
        # Policy is already created by init container so fluentd will skip it's creation
        ilm_policy_id kubernetes_policy
        ilm_policy {"policy": {"phases": {"hot": {"actions": {"rollover": {"max_size": "{{ requiredEnv "ROLLOVER_SIZE" }}GB","max_age": "{{ requiredEnv "ROLLOVER_AGE" }}d"}}}}}}
        # Template name is not used if ilm is in effect but it's mandatory parameter
        template_name kubernetes_template
        template_file /etc/templates/kubernetes_template
        customize_template {"<<index_prefix>>": "kubernetes"}
        # Custom parameters --END--
        <buffer>
          @type file
          path /var/log/fluentd-buffers/kubernetes.kubernetes.system.buffer
          flush_mode interval
          retry_type exponential_backoff
          flush_thread_count 2
          flush_interval 5s
          retry_forever
          retry_max_interval 30
          chunk_limit_size "#{ENV['OUTPUT_BUFFER_CHUNK_LIMIT']}"
          queue_limit_length "#{ENV['OUTPUT_BUFFER_QUEUE_LIMIT']}"
          overflow_action block
        </buffer>
      </match>
    <match **>
        @id elasticsearch
        @type elasticsearch
        @log_level "#{ENV['OUTPUT_LOG_LEVEL']}"
        include_tag_key true
        type_name _doc
        host "#{ENV['OUTPUT_HOST']}"
        port "#{ENV['OUTPUT_PORT']}"
        path "#{ENV['OUTPUT_PATH']}"
        scheme "#{ENV['OUTPUT_SCHEME']}"
        ssl_verify "#{ENV['OUTPUT_SSL_VERIFY']}"
        ssl_version "#{ENV['OUTPUT_SSL_VERSION']}"
        user "#{ENV['OUTPUT_USER']}"
        password "#{ENV['OUTPUT_PASSWORD']}"
        reconnect_on_error true
        # Custom parameters --START--
        # Rollover index configuration
        include_timestamp true # defaults to false
        index_name other
        rollover_index true
        deflector_alias other
        index_prefix other
        index_date_pattern "now/d"
        # Ilm configuration
        enable_ilm true
        # Policy is already created by init container so fluentd will skip it's creation
        ilm_policy_id other_policy
        ilm_policy {"policy": {"phases": {"hot": {"actions": {"rollover": {"max_size": "{{ requiredEnv "ROLLOVER_SIZE" }}GB","max_age": "{{ requiredEnv "ROLLOVER_AGE" }}d"}}}}}}
        # Template name is not used if ilm is in effect but it's mandatory parameter
        template_name other_template
        template_file /etc/templates/other_template
        customize_template {"<<index_prefix>>": "other"}
        # Custom parameters --END--
        <buffer>
          @type file
          path /var/log/fluentd-buffers/kubernetes.system.buffer
          flush_mode interval
          retry_type exponential_backoff
          flush_thread_count 2
          flush_interval 5s
          retry_forever
          retry_max_interval 30
          chunk_limit_size "#{ENV['OUTPUT_BUFFER_CHUNK_LIMIT']}"
          queue_limit_length "#{ENV['OUTPUT_BUFFER_QUEUE_LIMIT']}"
          overflow_action block
        </buffer>
      </match>


extraVolumes:
  - name: rkelogs
    hostPath:
      path: /var/lib/rancher/rke/log
  - name: template-secret
    secret:
      defaultMode: 420
      secretName: template-secret
extraVolumeMounts:
  - name: rkelogs
    mountPath: /var/lib/rancher/rke/log
    readOnly: true
  - name: template-secret
    mountPath: /etc/templates/
    readOnly: true

tolerations:
- effect: NoExecute
  key: "node-role.kubernetes.io/etcd"
  value: "true"
- effect: NoSchedule
  key: "node-role.kubernetes.io/controlplane"
  value: "true"

# Only run on control plane nodes
nodeSelector:
  node-role.kubernetes.io/controlplane: "true"
