installCRDs: false

resources:
  limits:
    cpu: 200m
    memory: 200Mi
  requests:
    cpu: 100m
    memory: 100Mi

initContainers:
  - name: velero-plugin-for-aws
    image: velero/velero-plugin-for-aws:v1.0.0
    imagePullPolicy: IfNotPresent
    volumeMounts:
      - mountPath: /target
        name: plugins

configuration:
  # Cloud provider being used (e.g. aws, azure, gcp).
  provider: aws

  # Parameters for the `default` BackupStorageLocation. See
  # https://velero.io/docs/v1.0.0/api-types/backupstoragelocation/
  backupStorageLocation:
    # Cloud provider where backups should be stored. Usually should
    # match `configuration.provider`. Required.
    name: aws
    # Bucket to store backups in. Required.
    bucket: {{ requiredEnv "S3_VELERO_BUCKET_NAME" }}
    # Prefix within bucket under which to store backups. Optional.
    prefix: service-cluster
    # Additional provider-specific configuration. See link above
    # for details of required/optional fields for your provider.
    config:
      region: {{ requiredEnv "S3_REGION" }}
      s3ForcePathStyle: "true"
      s3Url: {{ requiredEnv "S3_REGION_ENDPOINT" }}
  # Parameters for the `default` VolumeSnapshotLocation. See
  # https://velero.io/docs/v1.0.0/api-types/volumesnapshotlocation/
  volumeSnapshotLocation:
    config:
      region: {{ requiredEnv "S3_REGION" }}

# Info about the secret to be used by the Velero deployment, which
# should contain credentials for the cloud provider IAM account you've
# set up for Velero.
credentials:
  # Whether a secret should be used as the source of IAM account
  # credentials. Set to false if, for example, using kube2iam or
  # kiam to provide IAM credentials for the Velero pod.
  useSecret: true
  # Name of a pre-existing secret (if any) in the Velero namespace
  # that should be used to get IAM account credentials. Optional.
  existingSecret:
  # Data to be stored in the Velero secret, if `useSecret` is
  # true and `existingSecret` is empty. This should be the contents
  # of your IAM credentials file.
  secretContents:
    cloud: |
      [default]
      aws_access_key_id: {{ requiredEnv "S3_ACCESS_KEY" }}
      aws_secret_access_key: {{ requiredEnv "S3_SECRET_KEY" }}

# Whether to deploy the restic daemonset.
deployRestic: true

restic:
  podVolumePath: /var/lib/kubelet/pods
  resources:
    limits:
      cpu: 200m
      memory: 200Mi
    requests:
      cpu: 100m
      memory: 100Mi

# Backup schedules to create.
# Eg:
# schedules:
#   mybackup:
#     schedule: "0 0 * * *"
#     template:
#       excludedNamespaces: null
#       excludedResources: null
#       hooks:
#         resources: null
#       includeClusterResources: null
#       includedNamespaces:
#       - default
#       includedResources: null
#       labelSelector:
#         matchLabels:
#           app: test
#           velero: backup
#       storageLocation: ""
#       ttl: 720h0m0s
#       volumeSnapshotLocations: null
schedules:
  daily-backup:
    schedule: "0 0 * * *" #once per day
    template:
      labelSelector:
        matchLabels:
          velero: backup
      ttl: 720h0m0s
