global:
  rbac:
    pspEnabled: {{ env "ENABLE_PSP" | default "true" }}

kube-state-metrics:
  podSecurityPolicy:
    enabled: {{ env "ENABLE_PSP" | default "true" }}

grafana:
  # admin username is "admin"
  adminPassword: prom-operator

  ingress:
    enabled: true
    annotations:
      ingress.kubernetes.io/rewrite-target: /
      certmanager.k8s.io/cluster-issuer: letsencrypt-{{ requiredEnv "CERT_TYPE" }}
    hosts:
    - grafana.{{ requiredEnv "ECK_SC_DOMAIN" }}
    ## TLS configuration for grafana Ingress
    ## Secret must be manually created in the namespace
    tls:
    - secretName: grafana-general-tls
      hosts:
      - grafana.{{ requiredEnv "ECK_SC_DOMAIN" }}   
  rbac:
    pspUseAppArmor: false
    pspEnabled: {{ env "ENABLE_PSP" | default "true" }}

  serviceAccount:
    create: true
    name:
    nameTest:

  sidecar:
    datasources:
      enabled: true
      defaultDatasourceEnabled: false

  dashboardProviders: 
    dashboardproviders.yaml:
      apiVersion: 1
      providers:
      - name: 'default'
        orgId: 1
        folder: ''
        type: file
        disableDeletion: false
        editable: true
        options:
          path: /var/lib/grafana/dashboards/default

  dashboards:
    default: {}

  additionalDataSources:
  - name: prometheus-wc-reader
    access: proxy
    basicAuth: false
    editable: false
    isDefault: true
    orgId: 1
    type: prometheus
    url: http://prometheus-wc-reader:9090
    version: 1
  - name: prometheus-ss
    access: proxy
    basicAuth: false
    editable: false
    isDefault: false
    orgId: 1
    type: prometheus
    url: http://prometheus-operator-prometheus:9090
    version: 1

  grafana.ini:
    server:
      root_url: https://grafana.{{ requiredEnv "ECK_SC_DOMAIN" }}
    auth.generic_oauth:
      name: dex
      enabled: true
      client_id: grafana
      client_secret: Z3JhZmFuYS1zZWNyZXQK
      scopes: profile email openid
      auth_url: https://dex.{{ requiredEnv "ECK_SC_DOMAIN" }}/auth
      token_url: https://dex.{{ requiredEnv "ECK_SC_DOMAIN" }}/token
      api_url: https://dex.{{ requiredEnv "ECK_SC_DOMAIN" }}/api
      allowed_domains: {{ requiredEnv "OAUTH_ALLOWED_DOMAINS" }}
      allow_sign_up: true
      tls_skip_verify_insecure: {{ requiredEnv "TLS_SKIP_VERIFY" }}

prometheusOperator:
  createCustomResource: false

prometheus:
  prometheusSpec:
    remoteRead: 
    - url: http://influxdb.influxdb-prometheus.svc.cluster.local:8086/api/v1/prom/read?db=service_cluster&u=demo&p=demo-pass
    remoteWrite: 
    - url: http://influxdb.influxdb-prometheus.svc.cluster.local:8086/api/v1/prom/write?db=service_cluster&u=demo&p=demo-pass  