# Chart repositories used from within this state file.
repositories:
- name: stable
  url: https://kubernetes-charts.storage.googleapis.com
- name: jetstack
  url: https://charts.jetstack.io

# service_cluster specific repositories
{{ if eq .Environment.Name "service_cluster" }}
- name: harbor
  url: https://helm.goharbor.io
{{ end }}

# Workload cluster specific repositories
{{ if eq .Environment.Name "workload_cluster" }}
- name: kiwigrid
  url: https://kiwigrid.github.io
{{ end }}

# Defults settings to use with helm and tiller.
helmDefaults:
  tillerNamespace: kube-system  #dedicated default key for tiller-namespace
  tls: true
  timeout: 300
  wait: false

  # TODO: Use env or Env.values instead of fixed paths for certs.
  {{ if eq .Environment.Name "service_cluster" }}
  tlsCACert: "../clusters/{{ env "CLOUD_PROVIDER" }}/{{ env "ENVIRONMENT_NAME" }}/certs/service_cluster/kube-system/certs/ca.pem"
  tlsCert: "../clusters/{{ env "CLOUD_PROVIDER" }}/{{ env "ENVIRONMENT_NAME" }}/certs/service_cluster/kube-system/certs/helm.pem"
  tlsKey: "../clusters/{{ env "CLOUD_PROVIDER" }}/{{ env "ENVIRONMENT_NAME" }}/certs/service_cluster/kube-system/certs/helm-key.pem"
  {{ end }}
  {{ if eq .Environment.Name "workload_cluster" }}
  tlsCACert: "../clusters/{{ env "CLOUD_PROVIDER" }}/{{ env "ENVIRONMENT_NAME" }}/certs/workload_cluster/kube-system/certs/ca.pem"
  tlsCert: "../clusters/{{ env "CLOUD_PROVIDER" }}/{{ env "ENVIRONMENT_NAME" }}/certs/workload_cluster/kube-system/certs/helm.pem"
  tlsKey: "../clusters/{{ env "CLOUD_PROVIDER" }}/{{ env "ENVIRONMENT_NAME" }}/certs/workload_cluster/kube-system/certs/helm-key.pem"
  {{ end }}


# Environments
environments:
  workload_cluster:
  service_cluster:

# The desired state of Helm releases.
releases:
# Nginx-ingress
- name: nginx-ingress
  namespace: nginx-ingress
  labels:
    app: nginx-ingress
  chart: stable/nginx-ingress
  version: 1.25.0
  missingFileHandler: error
  wait: true
  values:
  - values/nginx-ingress.yaml.gotmpl

# NFS
- name: nfs-client-provisioner
  namespace: kube-system
  labels:
    app: nfs-client-provisioner
  chart: stable/nfs-client-provisioner
  version: 1.2.6
  missingFileHandler: error
  wait: true
  values:
  {{ if eq .Environment.Name "service_cluster" }}
  - values/nfs-client-provisioner-sc.yaml.gotmpl
  {{ end }}
  {{ if eq .Environment.Name "workload_cluster" }}
  - values/nfs-client-provisioner-wc.yaml.gotmpl
  {{ end }}

# Oauth2
- name: oauth2
  namespace: kube-system
  labels:
    app: oauth2
  chart: stable/oauth2-proxy
  version: 0.12.3
  missingFileHandler: error
  values:
  {{ if eq .Environment.Name "service_cluster" }}
    - values/oauth2-sc.yaml.gotmpl
  {{ end }}

  {{ if eq .Environment.Name "workload_cluster" }}
  - values/oauth2-wc.yaml.gotmpl
  {{ end }}

# Cert-manager
- name: cert-manager
  namespace: cert-manager
  labels:
    app: cert-manager
  chart: jetstack/cert-manager
  version: v0.10.0
  missingFileHandler: error
  wait: true

# Prometheus-operator
- name: prometheus-operator
  namespace: monitoring
  labels:
    app: prometheus-operator
  chart: stable/prometheus-operator
  version: 6.2.1
  missingFileHandler: error
  values:
{{ if eq .Environment.Name "service_cluster" }}
  - values/prometheus-operator-sc.yaml.gotmpl
{{ end }}
{{ if eq .Environment.Name "workload_cluster" }}
  - values/prometheus-operator-wc.yaml.gotmpl
{{ end }}

# Service cluster releases
{{ if eq .Environment.Name "service_cluster" }}
# Dex
- name: dex
  namespace: dex
  labels:
    app: dex
  chart: stable/dex
  version: 2.1.1
  missingFileHandler: error
  wait: true
  values:
  - values/dex.yaml.gotmpl

{{ if eq (env "ENABLE_CUSTOMER_PROMETHEUS") "true" }}
# Prometheus-instance for scraping customer metrics
- name: customer-scraper
  namespace: monitoring
  labels:
    app: customer-federate-scraper
  chart: ./charts/prometheus-instance
  version: 0.1.0
  missingFileHandler: error
  values:
  - values/prometheus-customer-federate-scraper.yaml.gotmpl
{{ end }}
# Prometheus-instance for scraping workload cluster metrics
- name: wc-scraper
  namespace: monitoring
  labels:
    app: customer-federate-scraper
  chart: ./charts/prometheus-instance
  version: 0.1.0
  missingFileHandler: error
  values:
  - values/prometheus-wc-federate-scraper.yaml.gotmpl

# Harbor
- name: harbor
  namespace: harbor
  labels:
    app: harbor
  chart: harbor/harbor
  version: 1.2.1
  missingFileHandler: error
  wait: true
  values:
  - values/harbor.yaml.gotmpl

# InfluxDB
- name: influxdb
  namespace: influxdb-prometheus
  labels:
    app: influxdb
  chart: stable/influxdb
  version: 1.3.1
  missingFileHandler: error
  wait: true
  values:
  - values/influxdb.yaml.gotmpl

# End of system services releases
{{ end }}

# Workload cluster releases
{{ if eq .Environment.Name "workload_cluster"  }}
# Falco
- name: falco
  namespace: falco
  labels:
    app: falco
  chart: stable/falco
  version: 1.0.7
  missingFileHandler: error
  values:
  - values/falco.yaml.gotmpl

# Fluentd
- name: fluentd-system
  namespace: kube-system
  labels:
    app: fluentd
  chart: kiwigrid/fluentd-elasticsearch
  version: 5.1.1
  missingFileHandler: error
  values:
  - values/fluentd.yaml.gotmpl

# Fluentd configurable by the customer
- name: fluentd
  namespace: fluentd
  labels:
    app: fluentd
  chart: kiwigrid/fluentd-elasticsearch
  version: 5.1.1
  missingFileHandler: error
  values:
  - values/fluentd-customer.yaml.gotmpl

# opa
- name: opa
  namespace: opa
  labels:
    app: opa
  chart: stable/opa
  version: 1.6.0
  missingFileHandler: error
  values:
  - values/opa.yaml.gotmpl

# Velero
- name: velero
  namespace: velero
  labels:
    app: velero
  chart: stable/velero
  version: 2.1.7
  missingFileHandler: error
  values:
  - values/velero.yaml.gotmpl

{{ end }}
