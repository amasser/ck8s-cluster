apiVersion: v1
kind: Secret
metadata:
  name: influx-restore-credentials
type: Opaque
stringData:
  AWS_SECRET_ACCESS_KEY: $S3_SECRET_KEY
  AWS_ACCESS_KEY_ID: $S3_ACCESS_KEY
---
apiVersion: v1
kind: Pod
metadata:
  name: influxdb-restore
  labels:
    app: influxdb-backup
spec:
  restartPolicy: Never
  volumes:
  - name: backups
    emptyDir: {}
  initContainers:
  - name: aws-cli-util
    image: atlassian/pipelines-awscli
    command:
    - /bin/sh
    args:
    - '-c'
    - |
      printenv
      aws s3 --endpoint-url $S3_REGION_ENDPOINT sync "s3://$S3_INFLUX_BUCKET_NAME/$INFLUX_BACKUP_NAME" /backups/$INFLUX_BACKUP_NAME
    envFrom:
    - secretRef:
        name: influx-restore-credentials
    env:
    - name: AWS_DEFAULT_REGION
      value: $S3_REGION
    volumeMounts:
    - name: backups
      mountPath: /backups
    resources:
      requests:
        cpu: 50m
        memory: 100Mi
      limits:
        cpu: 250m
        memory: 300Mi
  containers:
  - name: influxdb-restore
    image: influxdb:1.7.6-alpine
    volumeMounts:
    - name: backups
      mountPath: /backups
    command:
    - /bin/sh
    args:
    - '-c'
    - |
      echo "Dropping SC"
      influx -host $(echo "$INFLUX_ADDR" | cut -d':' -f1) -username admin -password $INFLUXDB_PWD -execute 'DROP DATABASE service_cluster'
      echo "Restore SC"
      influxd restore -portable -db service_cluster -host $INFLUX_ADDR /backups/$INFLUX_BACKUP_NAME/
      echo "Dropping WC"
      influx -host $(echo "$INFLUX_ADDR" | cut -d':' -f1) -username admin -password $INFLUXDB_PWD -execute 'DROP DATABASE workload_cluster'
      echo "Restore WC"
      influxd restore -portable -db workload_cluster -host $INFLUX_ADDR /backups/$INFLUX_BACKUP_NAME/
    resources:
      requests:
        cpu: 50m
        memory: 100Mi
      limits:
        cpu: 250m
        memory: 300Mi
