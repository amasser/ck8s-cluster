apiVersion: v1
kind: ConfigMap
metadata:
  name: ck8sdash-init-script
  namespace: ck8sdash
data:
  init.sh: |
    #!/bin/sh
    set -e 
    echo "Starting init script"

    APISERVER=https://kubernetes.default.svc
    SERVICEACCOUNT=/var/run/secrets/kubernetes.io/serviceaccount 
    TOKEN=$(cat ${SERVICEACCOUNT}/token) 
    CACERT=${SERVICEACCOUNT}/ca.crt 

    if [ "404" == $(curl -s --cacert ${CACERT} -o /dev/null -w "%{http_code}" \
        --header "Authorization: Bearer ${TOKEN}" \
        ${APISERVER}/api/v1/namespaces/ck8sdash/secrets/ck8sdash-grafana-api-key) ]
    then
        echo "Secret does not exist. Must create new api key."
        while [ "200" != $(curl -ksI -o /dev/null -X GET -w "%{http_code}" -u ${GRAFANA_BASIC_CREDENTIALS} \
            https://${GRAFANA_URL}) ]
        do
            echo "Waiting for grafana endpoint to be ready"
            sleep 1
        done

        id=$(curl -sk -X GET https://${GRAFANA_URL}/api/auth/keys -u ${GRAFANA_BASIC_CREDENTIALS} \
            | jq '.[] | select(.name=="'${GRAFANA_API_KEY_NAME}'") | .id')
        regex='^[0-9][0-9]*$'
        if echo -n $id | grep -q $regex
        then 
            echo "Deleting old api key"
            curl -sk -X DELETE https://${GRAFANA_URL}/api/auth/keys/${id} -u ${GRAFANA_BASIC_CREDENTIALS}
        fi
        export GRAFANA_API_KEY=$(curl -s -X POST https://${GRAFANA_URL}/api/auth/keys -u ${GRAFANA_BASIC_CREDENTIALS} \
            -H "Content-Type: application/json" -d '{"name": "'${GRAFANA_API_KEY_NAME}'", "role": "Admin"}' \
            | jq -j '.key')
        echo
        echo "Created new api key"

        export key=$(echo -n $GRAFANA_API_KEY | base64 - | tr -d '\n')

        env

        curl -o /dev/null -s --cacert ${CACERT} -H "Authorization: Bearer ${TOKEN}" -X POST \
        ${APISERVER}/api/v1/namespaces/ck8sdash/secrets  -H "Content-Type: application/json"\
        -d '{
          "apiVersion": "v1", 
          "kind": "Secret", 
          "data": {
            "grafana-api-key": "'"${key}"'"
          }, 
          "metadata": {
            "name": "ck8sdash-grafana-api-key",
            "namespace": "ck8sdash"
          },
          "type": "Opaque"
        }'
        echo "Created new secret"
    else
        echo "Secret already exists. Not creating new api key."
    fi