- hosts: all
  become: yes
  become_user: root
  tasks:

    - name: Install docker
      apt:
        name: docker.io
        update_cache: yes

    - name: Add the user ubuntu to the docker group
      user:
        name: ubuntu
        groups: docker
        append: yes

    - name: Write docker daemon config file
      copy:
        src: ./daemon.json
        dest: /etc/docker/daemon.json
      register: docker_config

    - name: Restart docker if config changed
      service:
        name: docker
        state: restarted
      when: docker_config.changed

    - name: enable docker
      service:
        name: docker
        enabled: yes

- hosts: extra_volume
  become: yes
  become_user: root
  tasks:

    - name: Create mount directory
      file: path=/mnt/disks state=directory owner=root group=root mode=0777

    - name: Create filesystem
      filesystem: dev={{ device_path }} fstype=ext4

    - name: Configure mount point
      mount: name=/mnt/disks/disk1 src={{ device_path }} fstype=ext4 state=mounted

- hosts: "*master*"
  become: yes
  become_user: root
  tasks:

    - name: Create Kubernetes conf directory
      file: path=/etc/kubernetes/conf state=directory owner=root group=root mode=0755

    - name: Add audit policy
      copy:
        src: ./audit-policy.yaml
        dest: /etc/kubernetes/conf/audit-policy.yaml
        owner: root
        group: root
        mode: '0644'

    - name: Add admission control config
      copy:
        src: ./admission-control-config.yaml
        dest: /etc/kubernetes/conf/admission-control-config.yaml
        owner: root
        group: root
        mode: '0644'

    - name: Add PodNodeSelector
      copy:
        src: ./podnodeselector.yaml
        dest: /etc/kubernetes/conf/podnodeselector.yaml
        owner: root
        group: root
        mode: '0644'

- hosts: wc_loadbalancers
  become: yes
  become_user: root
  vars:
    server_group: wc_workers
  roles:
    - haproxy
    - haproxy_exporter
  tags:
    - loadbalancer

- hosts: sc_loadbalancers
  become: yes
  become_user: root
  vars:
    server_group: sc_workers
  roles:
    - haproxy
    - haproxy_exporter
  tags:
    - loadbalancer
